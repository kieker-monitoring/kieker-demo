# ExplorViz Backend

# Start: `docker compose up -d`
# Stop + remove volumes: `docker compose down -v`

# To use native images instead of jvm-based images either modify .env file
# or start with `EXPLORVIZ_JAVA_IMAGE_TYPE=native docker compose up -d`

# Using custom .env file, e.g., `docker compose --env-file .env-custom up -d`
# Specify which environment to use in env-file, i.e. enable self-monitoring

include:
  - ./compose/compose.base.yaml

services:

  teastore-registry:
    image: kieker/teastore-registry:kieker-2.0.2
    expose:
      - "8080"
    depends_on:
      - teastore-db

  teastore-db:
    image: kieker/teastore-db:kieker-2.0.2
    expose:
      - "3306"
    ports:
      - "3306:3306"
    depends_on:
      - otel-transformer

  teastore-persistence:
    image: kieker/teastore-persistence:kieker-2.0.2
    expose:
      - "8080"
    environment:
      HOST_NAME: "teastore-persistence"
      REGISTRY_HOST: "teastore-registry"
      DB_HOST: "teastore-db"
      DB_PORT: "3306"
      RABBITMQ_HOST: "teastore-rabbitmq"
    depends_on:
      - teastore-registry

  teastore-auth:
    image: kieker/teastore-auth:kieker-2.0.2
    expose:
      - "8080"
    environment:
      HOST_NAME: "teastore-auth"
      REGISTRY_HOST: "teastore-registry"
      RABBITMQ_HOST: "teastore-rabbitmq"
    depends_on:
      - teastore-persistence

  teastore-image:
    image: kieker/teastore-image:kieker-2.0.2
    expose:
      - "8080"
    environment:
      HOST_NAME: "teastore-image"
      REGISTRY_HOST: "teastore-registry"
      RABBITMQ_HOST: "teastore-rabbitmq"
    depends_on:
      - teastore-recommender

  teastore-recommender:
    image: kieker/teastore-recommender:kieker-2.0.2
    expose:
      - "8080"
    environment:
      HOST_NAME: "teastore-recommender"
      REGISTRY_HOST: "teastore-registry"
      RABBITMQ_HOST: "teastore-rabbitmq"
    depends_on:
      - teastore-auth

  teastore-webui:
    image: kieker/teastore-webui:kieker-2.0.2
    environment:
      HOST_NAME: "teastore-webui"
      REGISTRY_HOST: "teastore-registry"
      RABBITMQ_HOST: "teastore-rabbitmq"
    ports:
      - "8080:8080"
    depends_on:
      - teastore-image

  otel-transformer:
    hostname: otel-transformer
    image: kieker/otel-transformer:kieker-2.0.2
    expose:
      - "10001"
    #ports:
    #  - "10001:10001"
    depends_on:
      - frontend
    networks:
      default:
        ipv4_address: 172.18.0.13

  adapter-service:
    hostname: adapter-service
    image: explorviz/adapter-service-${EXPLORVIZ_JAVA_IMAGE_TYPE}:${ADAPTER_SERVICE_IMAGE_TAG}
    env_file:
       - path: ./.env
       - path: ./.env-custom
         required: false
    depends_on:
      init-kafka:
        condition: service_completed_successfully
      kafka:
        condition: service_healthy
      schema-registry:
        condition: service_started
    environment:
      - QUARKUS_KAFKA_STREAMS_SCHEMA_REGISTRY_URL=http://schema-registry:8081
      - EXPLORVIZ_LOG_LVL=DEBUG
      - EXPLORVIZ_VALIDATE_TOKEN_EXISTENCE=true
    deploy:
      mode: replicated
      replicas: ${ADAPTER_REPLICAS}

  span-service:
    hostname: span-service
    image: explorviz/span-service-${EXPLORVIZ_JAVA_IMAGE_TYPE}:${SPAN_SERVICE_IMAGE_TAG}
    env_file:
       - path: ./.env
       - path: ./.env-custom
         required: false
    depends_on:
      init-kafka:
        condition: service_completed_successfully
      init-cassandra:
        condition: service_completed_successfully
      kafka:
        condition: service_healthy
      cassandra:
        condition: service_healthy
      schema-registry:
        condition: service_started
    #ports:
    #- ${SPAN_PORT}:8080
    environment:
      - QUARKUS_CASSANDRA_CONTACT_POINTS=cassandra:9042
      - QUARKUS_CASSANDRA_AUTH_USERNAME=cassandra
      - QUARKUS_CASSANDRA_AUTH_PASSWORD=cassandra
      - QUARKUS_CASSANDRA_REQUEST_TIMEOUT=10
      - QUARKUS_KAFKA_STREAMS_SCHEMA_REGISTRY_URL=http://schema-registry:8081
      - EXPLORVIZ_LOG_LVL=DEBUG
      - EXPLORVIZ_SPAN_API_TIME_RANGES_ENABLED=true
    deploy:
      mode: replicated
      replicas: ${SPAN_REPLICAS}

  user-service:
    hostname: user-service
    image: explorviz/user-service-${EXPLORVIZ_JAVA_IMAGE_TYPE}:${USER_SERVICE_IMAGE_TAG}
    env_file:
       - path: ./.env
       - path: ./.env-custom
         required: false
    depends_on:
      init-kafka:
        condition: service_completed_successfully
      kafka:
        condition: service_healthy
      mongo-user:
        condition: service_started
      schema-registry:
        condition: service_started
    #ports:
    #- ${USER_PORT}:8080
    environment:
      - QUARKUS_OIDC_ENABLED=false
      - INIT_TOKEN_ENABLED=true
      - INIT_TOKEN_VALUE=mytokenvalue
      - INIT_TOKEN_SECRET=mytokensecret
      - MP_MESSAGING_OUTGOING_TOKEN_EVENTS_SCHEMA_REGISTRY_URL=http://schema-registry:8081
      - QUARKUS_MONGODB_CONNECTION_STRING=mongodb://mongo-user:27017
      - EXPLORVIZ_LOG_LVL=DEBUG
